#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HavanaDAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="HavanaRealEstate")]
	public partial class HavanadataclassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertFeebackRply(FeebackRply instance);
    partial void UpdateFeebackRply(FeebackRply instance);
    partial void DeleteFeebackRply(FeebackRply instance);
    partial void Inserttblavailableblock(tblavailableblock instance);
    partial void Updatetblavailableblock(tblavailableblock instance);
    partial void Deletetblavailableblock(tblavailableblock instance);
    partial void Inserttblbank(tblbank instance);
    partial void Updatetblbank(tblbank instance);
    partial void Deletetblbank(tblbank instance);
    partial void Inserttblblockcategory(tblblockcategory instance);
    partial void Updatetblblockcategory(tblblockcategory instance);
    partial void Deletetblblockcategory(tblblockcategory instance);
    partial void Inserttblcontactus(tblcontactus instance);
    partial void Updatetblcontactus(tblcontactus instance);
    partial void Deletetblcontactus(tblcontactus instance);
    partial void Inserttblfeedback(tblfeedback instance);
    partial void Updatetblfeedback(tblfeedback instance);
    partial void Deletetblfeedback(tblfeedback instance);
    partial void Inserttblkyc(tblkyc instance);
    partial void Updatetblkyc(tblkyc instance);
    partial void Deletetblkyc(tblkyc instance);
    partial void InserttblPlanCharge(tblPlanCharge instance);
    partial void UpdatetblPlanCharge(tblPlanCharge instance);
    partial void DeletetblPlanCharge(tblPlanCharge instance);
    partial void InserttblPlansMaster(tblPlansMaster instance);
    partial void UpdatetblPlansMaster(tblPlansMaster instance);
    partial void DeletetblPlansMaster(tblPlansMaster instance);
    partial void Inserttblprofile(tblprofile instance);
    partial void Updatetblprofile(tblprofile instance);
    partial void Deletetblprofile(tblprofile instance);
    partial void InserttblProperty(tblProperty instance);
    partial void UpdatetblProperty(tblProperty instance);
    partial void DeletetblProperty(tblProperty instance);
    partial void Inserttblreg(tblreg instance);
    partial void Updatetblreg(tblreg instance);
    partial void Deletetblreg(tblreg instance);
    partial void Inserttblrplycontact(tblrplycontact instance);
    partial void Updatetblrplycontact(tblrplycontact instance);
    partial void Deletetblrplycontact(tblrplycontact instance);
    #endregion
		
		public HavanadataclassesDataContext() : 
				base(global::HavanaDAL.Properties.Settings.Default.HavanaRealEstateConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public HavanadataclassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HavanadataclassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HavanadataclassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HavanadataclassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<FeebackRply> FeebackRplies
		{
			get
			{
				return this.GetTable<FeebackRply>();
			}
		}
		
		public System.Data.Linq.Table<tblavailableblock> tblavailableblocks
		{
			get
			{
				return this.GetTable<tblavailableblock>();
			}
		}
		
		public System.Data.Linq.Table<tblbank> tblbanks
		{
			get
			{
				return this.GetTable<tblbank>();
			}
		}
		
		public System.Data.Linq.Table<tblblockcategory> tblblockcategories
		{
			get
			{
				return this.GetTable<tblblockcategory>();
			}
		}
		
		public System.Data.Linq.Table<tblcontactus> tblcontactus
		{
			get
			{
				return this.GetTable<tblcontactus>();
			}
		}
		
		public System.Data.Linq.Table<tblfeedback> tblfeedbacks
		{
			get
			{
				return this.GetTable<tblfeedback>();
			}
		}
		
		public System.Data.Linq.Table<tblkyc> tblkycs
		{
			get
			{
				return this.GetTable<tblkyc>();
			}
		}
		
		public System.Data.Linq.Table<tblPlanCharge> tblPlanCharges
		{
			get
			{
				return this.GetTable<tblPlanCharge>();
			}
		}
		
		public System.Data.Linq.Table<tblPlansMaster> tblPlansMasters
		{
			get
			{
				return this.GetTable<tblPlansMaster>();
			}
		}
		
		public System.Data.Linq.Table<tblprofile> tblprofiles
		{
			get
			{
				return this.GetTable<tblprofile>();
			}
		}
		
		public System.Data.Linq.Table<tblProperty> tblProperties
		{
			get
			{
				return this.GetTable<tblProperty>();
			}
		}
		
		public System.Data.Linq.Table<tblreg> tblregs
		{
			get
			{
				return this.GetTable<tblreg>();
			}
		}
		
		public System.Data.Linq.Table<tblrplycontact> tblrplycontacts
		{
			get
			{
				return this.GetTable<tblrplycontact>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FeebackRply")]
	public partial class FeebackRply : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _RplyId;
		
		private string _Rply;
		
		private System.Nullable<System.DateTime> _Updt;
		
		private System.Nullable<System.DateTime> _Crdt;
		
		private System.Nullable<bool> _IsActive;
		
		private EntityRef<tblfeedback> _tblfeedback;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnRplyIdChanging(System.Nullable<int> value);
    partial void OnRplyIdChanged();
    partial void OnRplyChanging(string value);
    partial void OnRplyChanged();
    partial void OnUpdtChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdtChanged();
    partial void OnCrdtChanging(System.Nullable<System.DateTime> value);
    partial void OnCrdtChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    #endregion
		
		public FeebackRply()
		{
			this._tblfeedback = default(EntityRef<tblfeedback>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RplyId", DbType="Int")]
		public System.Nullable<int> RplyId
		{
			get
			{
				return this._RplyId;
			}
			set
			{
				if ((this._RplyId != value))
				{
					if (this._tblfeedback.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRplyIdChanging(value);
					this.SendPropertyChanging();
					this._RplyId = value;
					this.SendPropertyChanged("RplyId");
					this.OnRplyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rply", DbType="VarChar(500)")]
		public string Rply
		{
			get
			{
				return this._Rply;
			}
			set
			{
				if ((this._Rply != value))
				{
					this.OnRplyChanging(value);
					this.SendPropertyChanging();
					this._Rply = value;
					this.SendPropertyChanged("Rply");
					this.OnRplyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updt", DbType="DateTime")]
		public System.Nullable<System.DateTime> Updt
		{
			get
			{
				return this._Updt;
			}
			set
			{
				if ((this._Updt != value))
				{
					this.OnUpdtChanging(value);
					this.SendPropertyChanging();
					this._Updt = value;
					this.SendPropertyChanged("Updt");
					this.OnUpdtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Crdt", DbType="DateTime")]
		public System.Nullable<System.DateTime> Crdt
		{
			get
			{
				return this._Crdt;
			}
			set
			{
				if ((this._Crdt != value))
				{
					this.OnCrdtChanging(value);
					this.SendPropertyChanging();
					this._Crdt = value;
					this.SendPropertyChanged("Crdt");
					this.OnCrdtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblfeedback_FeebackRply", Storage="_tblfeedback", ThisKey="RplyId", OtherKey="Id", IsForeignKey=true)]
		public tblfeedback tblfeedback
		{
			get
			{
				return this._tblfeedback.Entity;
			}
			set
			{
				tblfeedback previousValue = this._tblfeedback.Entity;
				if (((previousValue != value) 
							|| (this._tblfeedback.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblfeedback.Entity = null;
						previousValue.FeebackRplies.Remove(this);
					}
					this._tblfeedback.Entity = value;
					if ((value != null))
					{
						value.FeebackRplies.Add(this);
						this._RplyId = value.Id;
					}
					else
					{
						this._RplyId = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblfeedback");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblavailableblocks")]
	public partial class tblavailableblock : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _BlockId;
		
		private System.Nullable<int> _BlockNo;
		
		private System.Nullable<bool> _IsBooked;
		
		private System.Nullable<System.DateTime> _Crdt;
		
		private System.Nullable<System.DateTime> _Updt;
		
		private System.Nullable<bool> _IsActive;
		
		private EntityRef<tblblockcategory> _tblblockcategory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBlockIdChanging(System.Nullable<int> value);
    partial void OnBlockIdChanged();
    partial void OnBlockNoChanging(System.Nullable<int> value);
    partial void OnBlockNoChanged();
    partial void OnIsBookedChanging(System.Nullable<bool> value);
    partial void OnIsBookedChanged();
    partial void OnCrdtChanging(System.Nullable<System.DateTime> value);
    partial void OnCrdtChanged();
    partial void OnUpdtChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdtChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    #endregion
		
		public tblavailableblock()
		{
			this._tblblockcategory = default(EntityRef<tblblockcategory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlockId", DbType="Int")]
		public System.Nullable<int> BlockId
		{
			get
			{
				return this._BlockId;
			}
			set
			{
				if ((this._BlockId != value))
				{
					if (this._tblblockcategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBlockIdChanging(value);
					this.SendPropertyChanging();
					this._BlockId = value;
					this.SendPropertyChanged("BlockId");
					this.OnBlockIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlockNo", DbType="Int")]
		public System.Nullable<int> BlockNo
		{
			get
			{
				return this._BlockNo;
			}
			set
			{
				if ((this._BlockNo != value))
				{
					this.OnBlockNoChanging(value);
					this.SendPropertyChanging();
					this._BlockNo = value;
					this.SendPropertyChanged("BlockNo");
					this.OnBlockNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBooked", DbType="Bit")]
		public System.Nullable<bool> IsBooked
		{
			get
			{
				return this._IsBooked;
			}
			set
			{
				if ((this._IsBooked != value))
				{
					this.OnIsBookedChanging(value);
					this.SendPropertyChanging();
					this._IsBooked = value;
					this.SendPropertyChanged("IsBooked");
					this.OnIsBookedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Crdt", DbType="DateTime")]
		public System.Nullable<System.DateTime> Crdt
		{
			get
			{
				return this._Crdt;
			}
			set
			{
				if ((this._Crdt != value))
				{
					this.OnCrdtChanging(value);
					this.SendPropertyChanging();
					this._Crdt = value;
					this.SendPropertyChanged("Crdt");
					this.OnCrdtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updt", DbType="DateTime")]
		public System.Nullable<System.DateTime> Updt
		{
			get
			{
				return this._Updt;
			}
			set
			{
				if ((this._Updt != value))
				{
					this.OnUpdtChanging(value);
					this.SendPropertyChanging();
					this._Updt = value;
					this.SendPropertyChanged("Updt");
					this.OnUpdtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblblockcategory_tblavailableblock", Storage="_tblblockcategory", ThisKey="BlockId", OtherKey="Id", IsForeignKey=true)]
		public tblblockcategory tblblockcategory
		{
			get
			{
				return this._tblblockcategory.Entity;
			}
			set
			{
				tblblockcategory previousValue = this._tblblockcategory.Entity;
				if (((previousValue != value) 
							|| (this._tblblockcategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblblockcategory.Entity = null;
						previousValue.tblavailableblocks.Remove(this);
					}
					this._tblblockcategory.Entity = value;
					if ((value != null))
					{
						value.tblavailableblocks.Add(this);
						this._BlockId = value.Id;
					}
					else
					{
						this._BlockId = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblblockcategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblbank")]
	public partial class tblbank : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _RegId;
		
		private string _BankName;
		
		private string _BankBranch;
		
		private string _IFSC;
		
		private System.Nullable<long> _AccountNo;
		
		private System.Nullable<System.DateTime> _Updt;
		
		private System.Nullable<System.DateTime> _Crdt;
		
		private System.Nullable<bool> _IsActive;
		
		private EntityRef<tblreg> _tblreg;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnRegIdChanging(System.Nullable<int> value);
    partial void OnRegIdChanged();
    partial void OnBankNameChanging(string value);
    partial void OnBankNameChanged();
    partial void OnBankBranchChanging(string value);
    partial void OnBankBranchChanged();
    partial void OnIFSCChanging(string value);
    partial void OnIFSCChanged();
    partial void OnAccountNoChanging(System.Nullable<long> value);
    partial void OnAccountNoChanged();
    partial void OnUpdtChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdtChanged();
    partial void OnCrdtChanging(System.Nullable<System.DateTime> value);
    partial void OnCrdtChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    #endregion
		
		public tblbank()
		{
			this._tblreg = default(EntityRef<tblreg>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegId", DbType="Int")]
		public System.Nullable<int> RegId
		{
			get
			{
				return this._RegId;
			}
			set
			{
				if ((this._RegId != value))
				{
					if (this._tblreg.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRegIdChanging(value);
					this.SendPropertyChanging();
					this._RegId = value;
					this.SendPropertyChanged("RegId");
					this.OnRegIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="VarChar(50)")]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this.OnBankNameChanging(value);
					this.SendPropertyChanging();
					this._BankName = value;
					this.SendPropertyChanged("BankName");
					this.OnBankNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankBranch", DbType="VarChar(50)")]
		public string BankBranch
		{
			get
			{
				return this._BankBranch;
			}
			set
			{
				if ((this._BankBranch != value))
				{
					this.OnBankBranchChanging(value);
					this.SendPropertyChanging();
					this._BankBranch = value;
					this.SendPropertyChanged("BankBranch");
					this.OnBankBranchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IFSC", DbType="VarChar(11)")]
		public string IFSC
		{
			get
			{
				return this._IFSC;
			}
			set
			{
				if ((this._IFSC != value))
				{
					this.OnIFSCChanging(value);
					this.SendPropertyChanging();
					this._IFSC = value;
					this.SendPropertyChanged("IFSC");
					this.OnIFSCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNo", DbType="BigInt")]
		public System.Nullable<long> AccountNo
		{
			get
			{
				return this._AccountNo;
			}
			set
			{
				if ((this._AccountNo != value))
				{
					this.OnAccountNoChanging(value);
					this.SendPropertyChanging();
					this._AccountNo = value;
					this.SendPropertyChanged("AccountNo");
					this.OnAccountNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updt", DbType="DateTime")]
		public System.Nullable<System.DateTime> Updt
		{
			get
			{
				return this._Updt;
			}
			set
			{
				if ((this._Updt != value))
				{
					this.OnUpdtChanging(value);
					this.SendPropertyChanging();
					this._Updt = value;
					this.SendPropertyChanged("Updt");
					this.OnUpdtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Crdt", DbType="DateTime")]
		public System.Nullable<System.DateTime> Crdt
		{
			get
			{
				return this._Crdt;
			}
			set
			{
				if ((this._Crdt != value))
				{
					this.OnCrdtChanging(value);
					this.SendPropertyChanging();
					this._Crdt = value;
					this.SendPropertyChanged("Crdt");
					this.OnCrdtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblreg_tblbank", Storage="_tblreg", ThisKey="RegId", OtherKey="Id", IsForeignKey=true)]
		public tblreg tblreg
		{
			get
			{
				return this._tblreg.Entity;
			}
			set
			{
				tblreg previousValue = this._tblreg.Entity;
				if (((previousValue != value) 
							|| (this._tblreg.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblreg.Entity = null;
						previousValue.tblbanks.Remove(this);
					}
					this._tblreg.Entity = value;
					if ((value != null))
					{
						value.tblbanks.Add(this);
						this._RegId = value.Id;
					}
					else
					{
						this._RegId = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblreg");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblblockcategory")]
	public partial class tblblockcategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _BlockName;
		
		private System.Nullable<System.DateTime> _Crdt;
		
		private System.Nullable<System.DateTime> _Updt;
		
		private System.Nullable<bool> _IsActive;
		
		private EntitySet<tblavailableblock> _tblavailableblocks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBlockNameChanging(string value);
    partial void OnBlockNameChanged();
    partial void OnCrdtChanging(System.Nullable<System.DateTime> value);
    partial void OnCrdtChanged();
    partial void OnUpdtChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdtChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    #endregion
		
		public tblblockcategory()
		{
			this._tblavailableblocks = new EntitySet<tblavailableblock>(new Action<tblavailableblock>(this.attach_tblavailableblocks), new Action<tblavailableblock>(this.detach_tblavailableblocks));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlockName", DbType="VarChar(50)")]
		public string BlockName
		{
			get
			{
				return this._BlockName;
			}
			set
			{
				if ((this._BlockName != value))
				{
					this.OnBlockNameChanging(value);
					this.SendPropertyChanging();
					this._BlockName = value;
					this.SendPropertyChanged("BlockName");
					this.OnBlockNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Crdt", DbType="DateTime")]
		public System.Nullable<System.DateTime> Crdt
		{
			get
			{
				return this._Crdt;
			}
			set
			{
				if ((this._Crdt != value))
				{
					this.OnCrdtChanging(value);
					this.SendPropertyChanging();
					this._Crdt = value;
					this.SendPropertyChanged("Crdt");
					this.OnCrdtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updt", DbType="DateTime")]
		public System.Nullable<System.DateTime> Updt
		{
			get
			{
				return this._Updt;
			}
			set
			{
				if ((this._Updt != value))
				{
					this.OnUpdtChanging(value);
					this.SendPropertyChanging();
					this._Updt = value;
					this.SendPropertyChanged("Updt");
					this.OnUpdtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblblockcategory_tblavailableblock", Storage="_tblavailableblocks", ThisKey="Id", OtherKey="BlockId")]
		public EntitySet<tblavailableblock> tblavailableblocks
		{
			get
			{
				return this._tblavailableblocks;
			}
			set
			{
				this._tblavailableblocks.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblavailableblocks(tblavailableblock entity)
		{
			this.SendPropertyChanging();
			entity.tblblockcategory = this;
		}
		
		private void detach_tblavailableblocks(tblavailableblock entity)
		{
			this.SendPropertyChanging();
			entity.tblblockcategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblcontactus")]
	public partial class tblcontactus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private System.Nullable<long> _Contact;
		
		private string _Email;
		
		private string _Message;
		
		private System.Nullable<System.DateTime> _Updt;
		
		private System.Nullable<System.DateTime> _Crdt;
		
		private System.Nullable<bool> _IsActive;
		
		private EntitySet<tblrplycontact> _tblrplycontacts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnContactChanging(System.Nullable<long> value);
    partial void OnContactChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnUpdtChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdtChanged();
    partial void OnCrdtChanging(System.Nullable<System.DateTime> value);
    partial void OnCrdtChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    #endregion
		
		public tblcontactus()
		{
			this._tblrplycontacts = new EntitySet<tblrplycontact>(new Action<tblrplycontact>(this.attach_tblrplycontacts), new Action<tblrplycontact>(this.detach_tblrplycontacts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact", DbType="BigInt")]
		public System.Nullable<long> Contact
		{
			get
			{
				return this._Contact;
			}
			set
			{
				if ((this._Contact != value))
				{
					this.OnContactChanging(value);
					this.SendPropertyChanging();
					this._Contact = value;
					this.SendPropertyChanged("Contact");
					this.OnContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(500)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updt", DbType="DateTime")]
		public System.Nullable<System.DateTime> Updt
		{
			get
			{
				return this._Updt;
			}
			set
			{
				if ((this._Updt != value))
				{
					this.OnUpdtChanging(value);
					this.SendPropertyChanging();
					this._Updt = value;
					this.SendPropertyChanged("Updt");
					this.OnUpdtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Crdt", DbType="DateTime")]
		public System.Nullable<System.DateTime> Crdt
		{
			get
			{
				return this._Crdt;
			}
			set
			{
				if ((this._Crdt != value))
				{
					this.OnCrdtChanging(value);
					this.SendPropertyChanging();
					this._Crdt = value;
					this.SendPropertyChanged("Crdt");
					this.OnCrdtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblcontactus_tblrplycontact", Storage="_tblrplycontacts", ThisKey="Id", OtherKey="ContactId")]
		public EntitySet<tblrplycontact> tblrplycontacts
		{
			get
			{
				return this._tblrplycontacts;
			}
			set
			{
				this._tblrplycontacts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblrplycontacts(tblrplycontact entity)
		{
			this.SendPropertyChanging();
			entity.tblcontactus = this;
		}
		
		private void detach_tblrplycontacts(tblrplycontact entity)
		{
			this.SendPropertyChanging();
			entity.tblcontactus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblfeedback")]
	public partial class tblfeedback : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Email;
		
		private System.Nullable<long> _ContactNo;
		
		private string _Msg;
		
		private System.Nullable<char> _Rating;
		
		private System.Nullable<System.DateTime> _Updt;
		
		private System.Nullable<System.DateTime> _Crdt;
		
		private System.Nullable<bool> _IsActive;
		
		private EntitySet<FeebackRply> _FeebackRplies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnContactNoChanging(System.Nullable<long> value);
    partial void OnContactNoChanged();
    partial void OnMsgChanging(string value);
    partial void OnMsgChanged();
    partial void OnRatingChanging(System.Nullable<char> value);
    partial void OnRatingChanged();
    partial void OnUpdtChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdtChanged();
    partial void OnCrdtChanging(System.Nullable<System.DateTime> value);
    partial void OnCrdtChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    #endregion
		
		public tblfeedback()
		{
			this._FeebackRplies = new EntitySet<FeebackRply>(new Action<FeebackRply>(this.attach_FeebackRplies), new Action<FeebackRply>(this.detach_FeebackRplies));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(20)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNo", DbType="BigInt")]
		public System.Nullable<long> ContactNo
		{
			get
			{
				return this._ContactNo;
			}
			set
			{
				if ((this._ContactNo != value))
				{
					this.OnContactNoChanging(value);
					this.SendPropertyChanging();
					this._ContactNo = value;
					this.SendPropertyChanged("ContactNo");
					this.OnContactNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Msg", DbType="VarChar(500)")]
		public string Msg
		{
			get
			{
				return this._Msg;
			}
			set
			{
				if ((this._Msg != value))
				{
					this.OnMsgChanging(value);
					this.SendPropertyChanging();
					this._Msg = value;
					this.SendPropertyChanged("Msg");
					this.OnMsgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rating", DbType="Char(1)")]
		public System.Nullable<char> Rating
		{
			get
			{
				return this._Rating;
			}
			set
			{
				if ((this._Rating != value))
				{
					this.OnRatingChanging(value);
					this.SendPropertyChanging();
					this._Rating = value;
					this.SendPropertyChanged("Rating");
					this.OnRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updt", DbType="DateTime")]
		public System.Nullable<System.DateTime> Updt
		{
			get
			{
				return this._Updt;
			}
			set
			{
				if ((this._Updt != value))
				{
					this.OnUpdtChanging(value);
					this.SendPropertyChanging();
					this._Updt = value;
					this.SendPropertyChanged("Updt");
					this.OnUpdtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Crdt", DbType="DateTime")]
		public System.Nullable<System.DateTime> Crdt
		{
			get
			{
				return this._Crdt;
			}
			set
			{
				if ((this._Crdt != value))
				{
					this.OnCrdtChanging(value);
					this.SendPropertyChanging();
					this._Crdt = value;
					this.SendPropertyChanged("Crdt");
					this.OnCrdtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblfeedback_FeebackRply", Storage="_FeebackRplies", ThisKey="Id", OtherKey="RplyId")]
		public EntitySet<FeebackRply> FeebackRplies
		{
			get
			{
				return this._FeebackRplies;
			}
			set
			{
				this._FeebackRplies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FeebackRplies(FeebackRply entity)
		{
			this.SendPropertyChanging();
			entity.tblfeedback = this;
		}
		
		private void detach_FeebackRplies(FeebackRply entity)
		{
			this.SendPropertyChanging();
			entity.tblfeedback = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblkyc")]
	public partial class tblkyc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _RegId;
		
		private string _Pan;
		
		private System.Nullable<long> _Aadhaar;
		
		private System.Nullable<System.DateTime> _Updt;
		
		private System.Nullable<System.DateTime> _Crdt;
		
		private System.Nullable<bool> _IsActive;
		
		private EntityRef<tblreg> _tblreg;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnRegIdChanging(System.Nullable<int> value);
    partial void OnRegIdChanged();
    partial void OnPanChanging(string value);
    partial void OnPanChanged();
    partial void OnAadhaarChanging(System.Nullable<long> value);
    partial void OnAadhaarChanged();
    partial void OnUpdtChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdtChanged();
    partial void OnCrdtChanging(System.Nullable<System.DateTime> value);
    partial void OnCrdtChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    #endregion
		
		public tblkyc()
		{
			this._tblreg = default(EntityRef<tblreg>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegId", DbType="Int")]
		public System.Nullable<int> RegId
		{
			get
			{
				return this._RegId;
			}
			set
			{
				if ((this._RegId != value))
				{
					if (this._tblreg.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRegIdChanging(value);
					this.SendPropertyChanging();
					this._RegId = value;
					this.SendPropertyChanged("RegId");
					this.OnRegIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pan", DbType="VarChar(10)")]
		public string Pan
		{
			get
			{
				return this._Pan;
			}
			set
			{
				if ((this._Pan != value))
				{
					this.OnPanChanging(value);
					this.SendPropertyChanging();
					this._Pan = value;
					this.SendPropertyChanged("Pan");
					this.OnPanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Aadhaar", DbType="BigInt")]
		public System.Nullable<long> Aadhaar
		{
			get
			{
				return this._Aadhaar;
			}
			set
			{
				if ((this._Aadhaar != value))
				{
					this.OnAadhaarChanging(value);
					this.SendPropertyChanging();
					this._Aadhaar = value;
					this.SendPropertyChanged("Aadhaar");
					this.OnAadhaarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updt", DbType="Date")]
		public System.Nullable<System.DateTime> Updt
		{
			get
			{
				return this._Updt;
			}
			set
			{
				if ((this._Updt != value))
				{
					this.OnUpdtChanging(value);
					this.SendPropertyChanging();
					this._Updt = value;
					this.SendPropertyChanged("Updt");
					this.OnUpdtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Crdt", DbType="Date")]
		public System.Nullable<System.DateTime> Crdt
		{
			get
			{
				return this._Crdt;
			}
			set
			{
				if ((this._Crdt != value))
				{
					this.OnCrdtChanging(value);
					this.SendPropertyChanging();
					this._Crdt = value;
					this.SendPropertyChanged("Crdt");
					this.OnCrdtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblreg_tblkyc", Storage="_tblreg", ThisKey="RegId", OtherKey="Id", IsForeignKey=true)]
		public tblreg tblreg
		{
			get
			{
				return this._tblreg.Entity;
			}
			set
			{
				tblreg previousValue = this._tblreg.Entity;
				if (((previousValue != value) 
							|| (this._tblreg.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblreg.Entity = null;
						previousValue.tblkycs.Remove(this);
					}
					this._tblreg.Entity = value;
					if ((value != null))
					{
						value.tblkycs.Add(this);
						this._RegId = value.Id;
					}
					else
					{
						this._RegId = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblreg");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblPlanCharges")]
	public partial class tblPlanCharge : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _PlanId;
		
		private System.Nullable<int> _EMI;
		
		private System.Nullable<int> _Total_EMIs;
		
		private System.Nullable<System.DateTime> _Updt;
		
		private System.Nullable<System.DateTime> _Crdt;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Nullable<decimal> _Extra_Charges;
		
		private EntityRef<tblPlansMaster> _tblPlansMaster;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPlanIdChanging(System.Nullable<int> value);
    partial void OnPlanIdChanged();
    partial void OnEMIChanging(System.Nullable<int> value);
    partial void OnEMIChanged();
    partial void OnTotal_EMIsChanging(System.Nullable<int> value);
    partial void OnTotal_EMIsChanged();
    partial void OnUpdtChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdtChanged();
    partial void OnCrdtChanging(System.Nullable<System.DateTime> value);
    partial void OnCrdtChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnExtra_ChargesChanging(System.Nullable<decimal> value);
    partial void OnExtra_ChargesChanged();
    #endregion
		
		public tblPlanCharge()
		{
			this._tblPlansMaster = default(EntityRef<tblPlansMaster>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanId", DbType="Int")]
		public System.Nullable<int> PlanId
		{
			get
			{
				return this._PlanId;
			}
			set
			{
				if ((this._PlanId != value))
				{
					if (this._tblPlansMaster.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlanIdChanging(value);
					this.SendPropertyChanging();
					this._PlanId = value;
					this.SendPropertyChanged("PlanId");
					this.OnPlanIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMI", DbType="Int")]
		public System.Nullable<int> EMI
		{
			get
			{
				return this._EMI;
			}
			set
			{
				if ((this._EMI != value))
				{
					this.OnEMIChanging(value);
					this.SendPropertyChanging();
					this._EMI = value;
					this.SendPropertyChanged("EMI");
					this.OnEMIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Total EMIs]", Storage="_Total_EMIs", DbType="Int")]
		public System.Nullable<int> Total_EMIs
		{
			get
			{
				return this._Total_EMIs;
			}
			set
			{
				if ((this._Total_EMIs != value))
				{
					this.OnTotal_EMIsChanging(value);
					this.SendPropertyChanging();
					this._Total_EMIs = value;
					this.SendPropertyChanged("Total_EMIs");
					this.OnTotal_EMIsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updt", DbType="DateTime")]
		public System.Nullable<System.DateTime> Updt
		{
			get
			{
				return this._Updt;
			}
			set
			{
				if ((this._Updt != value))
				{
					this.OnUpdtChanging(value);
					this.SendPropertyChanging();
					this._Updt = value;
					this.SendPropertyChanged("Updt");
					this.OnUpdtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Crdt", DbType="DateTime")]
		public System.Nullable<System.DateTime> Crdt
		{
			get
			{
				return this._Crdt;
			}
			set
			{
				if ((this._Crdt != value))
				{
					this.OnCrdtChanging(value);
					this.SendPropertyChanging();
					this._Crdt = value;
					this.SendPropertyChanged("Crdt");
					this.OnCrdtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Extra Charges]", Storage="_Extra_Charges", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Extra_Charges
		{
			get
			{
				return this._Extra_Charges;
			}
			set
			{
				if ((this._Extra_Charges != value))
				{
					this.OnExtra_ChargesChanging(value);
					this.SendPropertyChanging();
					this._Extra_Charges = value;
					this.SendPropertyChanged("Extra_Charges");
					this.OnExtra_ChargesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblPlansMaster_tblPlanCharge", Storage="_tblPlansMaster", ThisKey="PlanId", OtherKey="Id", IsForeignKey=true)]
		public tblPlansMaster tblPlansMaster
		{
			get
			{
				return this._tblPlansMaster.Entity;
			}
			set
			{
				tblPlansMaster previousValue = this._tblPlansMaster.Entity;
				if (((previousValue != value) 
							|| (this._tblPlansMaster.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblPlansMaster.Entity = null;
						previousValue.tblPlanCharges.Remove(this);
					}
					this._tblPlansMaster.Entity = value;
					if ((value != null))
					{
						value.tblPlanCharges.Add(this);
						this._PlanId = value.Id;
					}
					else
					{
						this._PlanId = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblPlansMaster");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblPlansMaster")]
	public partial class tblPlansMaster : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _PlanName;
		
		private System.Nullable<System.DateTime> _Updt;
		
		private System.Nullable<System.DateTime> _Crdt;
		
		private System.Nullable<bool> _IsActive;
		
		private EntitySet<tblPlanCharge> _tblPlanCharges;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPlanNameChanging(string value);
    partial void OnPlanNameChanged();
    partial void OnUpdtChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdtChanged();
    partial void OnCrdtChanging(System.Nullable<System.DateTime> value);
    partial void OnCrdtChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    #endregion
		
		public tblPlansMaster()
		{
			this._tblPlanCharges = new EntitySet<tblPlanCharge>(new Action<tblPlanCharge>(this.attach_tblPlanCharges), new Action<tblPlanCharge>(this.detach_tblPlanCharges));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanName", DbType="VarChar(50)")]
		public string PlanName
		{
			get
			{
				return this._PlanName;
			}
			set
			{
				if ((this._PlanName != value))
				{
					this.OnPlanNameChanging(value);
					this.SendPropertyChanging();
					this._PlanName = value;
					this.SendPropertyChanged("PlanName");
					this.OnPlanNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updt", DbType="DateTime")]
		public System.Nullable<System.DateTime> Updt
		{
			get
			{
				return this._Updt;
			}
			set
			{
				if ((this._Updt != value))
				{
					this.OnUpdtChanging(value);
					this.SendPropertyChanging();
					this._Updt = value;
					this.SendPropertyChanged("Updt");
					this.OnUpdtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Crdt", DbType="DateTime")]
		public System.Nullable<System.DateTime> Crdt
		{
			get
			{
				return this._Crdt;
			}
			set
			{
				if ((this._Crdt != value))
				{
					this.OnCrdtChanging(value);
					this.SendPropertyChanging();
					this._Crdt = value;
					this.SendPropertyChanged("Crdt");
					this.OnCrdtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblPlansMaster_tblPlanCharge", Storage="_tblPlanCharges", ThisKey="Id", OtherKey="PlanId")]
		public EntitySet<tblPlanCharge> tblPlanCharges
		{
			get
			{
				return this._tblPlanCharges;
			}
			set
			{
				this._tblPlanCharges.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblPlanCharges(tblPlanCharge entity)
		{
			this.SendPropertyChanging();
			entity.tblPlansMaster = this;
		}
		
		private void detach_tblPlanCharges(tblPlanCharge entity)
		{
			this.SendPropertyChanging();
			entity.tblPlansMaster = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblprofile")]
	public partial class tblprofile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _RegId;
		
		private string _Picture;
		
		private System.Nullable<char> _Gender;
		
		private string _State;
		
		private string _City;
		
		private string _Address;
		
		private System.Nullable<long> _Pin;
		
		private System.Nullable<System.DateTime> _DOB;
		
		private System.Nullable<System.DateTime> _Updt;
		
		private System.Nullable<System.DateTime> _Crdt;
		
		private System.Nullable<bool> _IsActive;
		
		private EntityRef<tblreg> _tblreg;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnRegIdChanging(System.Nullable<int> value);
    partial void OnRegIdChanged();
    partial void OnPictureChanging(string value);
    partial void OnPictureChanged();
    partial void OnGenderChanging(System.Nullable<char> value);
    partial void OnGenderChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPinChanging(System.Nullable<long> value);
    partial void OnPinChanged();
    partial void OnDOBChanging(System.Nullable<System.DateTime> value);
    partial void OnDOBChanged();
    partial void OnUpdtChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdtChanged();
    partial void OnCrdtChanging(System.Nullable<System.DateTime> value);
    partial void OnCrdtChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    #endregion
		
		public tblprofile()
		{
			this._tblreg = default(EntityRef<tblreg>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegId", DbType="Int")]
		public System.Nullable<int> RegId
		{
			get
			{
				return this._RegId;
			}
			set
			{
				if ((this._RegId != value))
				{
					if (this._tblreg.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRegIdChanging(value);
					this.SendPropertyChanging();
					this._RegId = value;
					this.SendPropertyChanged("RegId");
					this.OnRegIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Picture", DbType="VarChar(MAX)")]
		public string Picture
		{
			get
			{
				return this._Picture;
			}
			set
			{
				if ((this._Picture != value))
				{
					this.OnPictureChanging(value);
					this.SendPropertyChanging();
					this._Picture = value;
					this.SendPropertyChanged("Picture");
					this.OnPictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="Char(1)")]
		public System.Nullable<char> Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="VarChar(50)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(50)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(100)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pin", DbType="BigInt")]
		public System.Nullable<long> Pin
		{
			get
			{
				return this._Pin;
			}
			set
			{
				if ((this._Pin != value))
				{
					this.OnPinChanging(value);
					this.SendPropertyChanging();
					this._Pin = value;
					this.SendPropertyChanged("Pin");
					this.OnPinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOB", DbType="Date")]
		public System.Nullable<System.DateTime> DOB
		{
			get
			{
				return this._DOB;
			}
			set
			{
				if ((this._DOB != value))
				{
					this.OnDOBChanging(value);
					this.SendPropertyChanging();
					this._DOB = value;
					this.SendPropertyChanged("DOB");
					this.OnDOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updt", DbType="DateTime")]
		public System.Nullable<System.DateTime> Updt
		{
			get
			{
				return this._Updt;
			}
			set
			{
				if ((this._Updt != value))
				{
					this.OnUpdtChanging(value);
					this.SendPropertyChanging();
					this._Updt = value;
					this.SendPropertyChanged("Updt");
					this.OnUpdtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Crdt", DbType="DateTime")]
		public System.Nullable<System.DateTime> Crdt
		{
			get
			{
				return this._Crdt;
			}
			set
			{
				if ((this._Crdt != value))
				{
					this.OnCrdtChanging(value);
					this.SendPropertyChanging();
					this._Crdt = value;
					this.SendPropertyChanged("Crdt");
					this.OnCrdtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblreg_tblprofile", Storage="_tblreg", ThisKey="RegId", OtherKey="Id", IsForeignKey=true)]
		public tblreg tblreg
		{
			get
			{
				return this._tblreg.Entity;
			}
			set
			{
				tblreg previousValue = this._tblreg.Entity;
				if (((previousValue != value) 
							|| (this._tblreg.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblreg.Entity = null;
						previousValue.tblprofiles.Remove(this);
					}
					this._tblreg.Entity = value;
					if ((value != null))
					{
						value.tblprofiles.Add(this);
						this._RegId = value.Id;
					}
					else
					{
						this._RegId = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblreg");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblProperties")]
	public partial class tblProperty : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Address;
		
		private System.Nullable<long> _Price;
		
		private System.Nullable<int> _Bedroom;
		
		private System.Nullable<int> _Bathroom;
		
		private System.Nullable<long> _Area;
		
		private string _For;
		
		private System.Nullable<System.DateTime> _Updt;
		
		private System.Nullable<System.DateTime> _Crdt;
		
		private System.Nullable<bool> _IsActive;
		
		private string _Image;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPriceChanging(System.Nullable<long> value);
    partial void OnPriceChanged();
    partial void OnBedroomChanging(System.Nullable<int> value);
    partial void OnBedroomChanged();
    partial void OnBathroomChanging(System.Nullable<int> value);
    partial void OnBathroomChanged();
    partial void OnAreaChanging(System.Nullable<long> value);
    partial void OnAreaChanged();
    partial void OnForChanging(string value);
    partial void OnForChanged();
    partial void OnUpdtChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdtChanged();
    partial void OnCrdtChanging(System.Nullable<System.DateTime> value);
    partial void OnCrdtChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    #endregion
		
		public tblProperty()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(100)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="BigInt")]
		public System.Nullable<long> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bedroom", DbType="Int")]
		public System.Nullable<int> Bedroom
		{
			get
			{
				return this._Bedroom;
			}
			set
			{
				if ((this._Bedroom != value))
				{
					this.OnBedroomChanging(value);
					this.SendPropertyChanging();
					this._Bedroom = value;
					this.SendPropertyChanged("Bedroom");
					this.OnBedroomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bathroom", DbType="Int")]
		public System.Nullable<int> Bathroom
		{
			get
			{
				return this._Bathroom;
			}
			set
			{
				if ((this._Bathroom != value))
				{
					this.OnBathroomChanging(value);
					this.SendPropertyChanging();
					this._Bathroom = value;
					this.SendPropertyChanged("Bathroom");
					this.OnBathroomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Area", DbType="BigInt")]
		public System.Nullable<long> Area
		{
			get
			{
				return this._Area;
			}
			set
			{
				if ((this._Area != value))
				{
					this.OnAreaChanging(value);
					this.SendPropertyChanging();
					this._Area = value;
					this.SendPropertyChanged("Area");
					this.OnAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[For]", Storage="_For", DbType="VarChar(16)")]
		public string For
		{
			get
			{
				return this._For;
			}
			set
			{
				if ((this._For != value))
				{
					this.OnForChanging(value);
					this.SendPropertyChanging();
					this._For = value;
					this.SendPropertyChanged("For");
					this.OnForChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updt", DbType="DateTime")]
		public System.Nullable<System.DateTime> Updt
		{
			get
			{
				return this._Updt;
			}
			set
			{
				if ((this._Updt != value))
				{
					this.OnUpdtChanging(value);
					this.SendPropertyChanging();
					this._Updt = value;
					this.SendPropertyChanged("Updt");
					this.OnUpdtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Crdt", DbType="DateTime")]
		public System.Nullable<System.DateTime> Crdt
		{
			get
			{
				return this._Crdt;
			}
			set
			{
				if ((this._Crdt != value))
				{
					this.OnCrdtChanging(value);
					this.SendPropertyChanging();
					this._Crdt = value;
					this.SendPropertyChanged("Crdt");
					this.OnCrdtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="VarChar(MAX)")]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblreg")]
	public partial class tblreg : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _RegNo;
		
		private string _Name;
		
		private System.Nullable<long> _ContactNo;
		
		private string _Email;
		
		private string _Password;
		
		private System.Nullable<bool> _IsVerified;
		
		private System.Nullable<System.DateTime> _Updt;
		
		private System.Nullable<System.DateTime> _Crdt;
		
		private System.Nullable<bool> _IsActive;
		
		private EntitySet<tblbank> _tblbanks;
		
		private EntitySet<tblkyc> _tblkycs;
		
		private EntitySet<tblprofile> _tblprofiles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnRegNoChanging(string value);
    partial void OnRegNoChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnContactNoChanging(System.Nullable<long> value);
    partial void OnContactNoChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnIsVerifiedChanging(System.Nullable<bool> value);
    partial void OnIsVerifiedChanged();
    partial void OnUpdtChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdtChanged();
    partial void OnCrdtChanging(System.Nullable<System.DateTime> value);
    partial void OnCrdtChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    #endregion
		
		public tblreg()
		{
			this._tblbanks = new EntitySet<tblbank>(new Action<tblbank>(this.attach_tblbanks), new Action<tblbank>(this.detach_tblbanks));
			this._tblkycs = new EntitySet<tblkyc>(new Action<tblkyc>(this.attach_tblkycs), new Action<tblkyc>(this.detach_tblkycs));
			this._tblprofiles = new EntitySet<tblprofile>(new Action<tblprofile>(this.attach_tblprofiles), new Action<tblprofile>(this.detach_tblprofiles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegNo", DbType="VarChar(50)")]
		public string RegNo
		{
			get
			{
				return this._RegNo;
			}
			set
			{
				if ((this._RegNo != value))
				{
					this.OnRegNoChanging(value);
					this.SendPropertyChanging();
					this._RegNo = value;
					this.SendPropertyChanged("RegNo");
					this.OnRegNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNo", DbType="BigInt")]
		public System.Nullable<long> ContactNo
		{
			get
			{
				return this._ContactNo;
			}
			set
			{
				if ((this._ContactNo != value))
				{
					this.OnContactNoChanging(value);
					this.SendPropertyChanging();
					this._ContactNo = value;
					this.SendPropertyChanged("ContactNo");
					this.OnContactNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(16)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVerified", DbType="Bit")]
		public System.Nullable<bool> IsVerified
		{
			get
			{
				return this._IsVerified;
			}
			set
			{
				if ((this._IsVerified != value))
				{
					this.OnIsVerifiedChanging(value);
					this.SendPropertyChanging();
					this._IsVerified = value;
					this.SendPropertyChanged("IsVerified");
					this.OnIsVerifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updt", DbType="Date")]
		public System.Nullable<System.DateTime> Updt
		{
			get
			{
				return this._Updt;
			}
			set
			{
				if ((this._Updt != value))
				{
					this.OnUpdtChanging(value);
					this.SendPropertyChanging();
					this._Updt = value;
					this.SendPropertyChanged("Updt");
					this.OnUpdtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Crdt", DbType="Date")]
		public System.Nullable<System.DateTime> Crdt
		{
			get
			{
				return this._Crdt;
			}
			set
			{
				if ((this._Crdt != value))
				{
					this.OnCrdtChanging(value);
					this.SendPropertyChanging();
					this._Crdt = value;
					this.SendPropertyChanged("Crdt");
					this.OnCrdtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblreg_tblbank", Storage="_tblbanks", ThisKey="Id", OtherKey="RegId")]
		public EntitySet<tblbank> tblbanks
		{
			get
			{
				return this._tblbanks;
			}
			set
			{
				this._tblbanks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblreg_tblkyc", Storage="_tblkycs", ThisKey="Id", OtherKey="RegId")]
		public EntitySet<tblkyc> tblkycs
		{
			get
			{
				return this._tblkycs;
			}
			set
			{
				this._tblkycs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblreg_tblprofile", Storage="_tblprofiles", ThisKey="Id", OtherKey="RegId")]
		public EntitySet<tblprofile> tblprofiles
		{
			get
			{
				return this._tblprofiles;
			}
			set
			{
				this._tblprofiles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblbanks(tblbank entity)
		{
			this.SendPropertyChanging();
			entity.tblreg = this;
		}
		
		private void detach_tblbanks(tblbank entity)
		{
			this.SendPropertyChanging();
			entity.tblreg = null;
		}
		
		private void attach_tblkycs(tblkyc entity)
		{
			this.SendPropertyChanging();
			entity.tblreg = this;
		}
		
		private void detach_tblkycs(tblkyc entity)
		{
			this.SendPropertyChanging();
			entity.tblreg = null;
		}
		
		private void attach_tblprofiles(tblprofile entity)
		{
			this.SendPropertyChanging();
			entity.tblreg = this;
		}
		
		private void detach_tblprofiles(tblprofile entity)
		{
			this.SendPropertyChanging();
			entity.tblreg = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblrplycontact")]
	public partial class tblrplycontact : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _ContactId;
		
		private string _Rply;
		
		private System.Nullable<System.DateTime> _Crdt;
		
		private System.Nullable<System.DateTime> _Updt;
		
		private System.Nullable<bool> _IsActive;
		
		private EntityRef<tblcontactus> _tblcontactus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnContactIdChanging(System.Nullable<int> value);
    partial void OnContactIdChanged();
    partial void OnRplyChanging(string value);
    partial void OnRplyChanged();
    partial void OnCrdtChanging(System.Nullable<System.DateTime> value);
    partial void OnCrdtChanged();
    partial void OnUpdtChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdtChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    #endregion
		
		public tblrplycontact()
		{
			this._tblcontactus = default(EntityRef<tblcontactus>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactId", DbType="Int")]
		public System.Nullable<int> ContactId
		{
			get
			{
				return this._ContactId;
			}
			set
			{
				if ((this._ContactId != value))
				{
					if (this._tblcontactus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContactIdChanging(value);
					this.SendPropertyChanging();
					this._ContactId = value;
					this.SendPropertyChanged("ContactId");
					this.OnContactIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rply", DbType="VarChar(500)")]
		public string Rply
		{
			get
			{
				return this._Rply;
			}
			set
			{
				if ((this._Rply != value))
				{
					this.OnRplyChanging(value);
					this.SendPropertyChanging();
					this._Rply = value;
					this.SendPropertyChanged("Rply");
					this.OnRplyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Crdt", DbType="DateTime")]
		public System.Nullable<System.DateTime> Crdt
		{
			get
			{
				return this._Crdt;
			}
			set
			{
				if ((this._Crdt != value))
				{
					this.OnCrdtChanging(value);
					this.SendPropertyChanging();
					this._Crdt = value;
					this.SendPropertyChanged("Crdt");
					this.OnCrdtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updt", DbType="DateTime")]
		public System.Nullable<System.DateTime> Updt
		{
			get
			{
				return this._Updt;
			}
			set
			{
				if ((this._Updt != value))
				{
					this.OnUpdtChanging(value);
					this.SendPropertyChanging();
					this._Updt = value;
					this.SendPropertyChanged("Updt");
					this.OnUpdtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblcontactus_tblrplycontact", Storage="_tblcontactus", ThisKey="ContactId", OtherKey="Id", IsForeignKey=true)]
		public tblcontactus tblcontactus
		{
			get
			{
				return this._tblcontactus.Entity;
			}
			set
			{
				tblcontactus previousValue = this._tblcontactus.Entity;
				if (((previousValue != value) 
							|| (this._tblcontactus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblcontactus.Entity = null;
						previousValue.tblrplycontacts.Remove(this);
					}
					this._tblcontactus.Entity = value;
					if ((value != null))
					{
						value.tblrplycontacts.Add(this);
						this._ContactId = value.Id;
					}
					else
					{
						this._ContactId = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblcontactus");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
